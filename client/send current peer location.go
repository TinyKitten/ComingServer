// Code generated by goagen v1.3.1, DO NOT EDIT.
//
// API "ComingServer": send current peer location Resource Client
//
// Command:
// $ goagen
// --design=github.com/TinyKitten/ComingServer/design
// --out=$(GOPATH)/src/github.com/TinyKitten/ComingServer
// --version=v1.3.1

package client

import (
	"context"
	"fmt"
	"golang.org/x/net/websocket"
	"net/url"
	"strconv"
)

// ConnectSendCurrentPeerLocationPath computes a request path to the connect action of send current peer location.
func ConnectSendCurrentPeerLocationPath() string {

	return fmt.Sprintf("/v1/echo")
}

// echo websocket server
func (c *Client) ConnectSendCurrentPeerLocation(ctx context.Context, path string, latitude float64, longitude float64, token string) (*websocket.Conn, error) {
	scheme := c.Scheme
	if scheme == "" {
		scheme = "ws"
	}
	u := url.URL{Host: c.Host, Scheme: scheme, Path: path}
	values := u.Query()
	tmp26 := strconv.FormatFloat(latitude, 'f', -1, 64)
	values.Set("latitude", tmp26)
	tmp27 := strconv.FormatFloat(longitude, 'f', -1, 64)
	values.Set("longitude", tmp27)
	values.Set("token", token)
	u.RawQuery = values.Encode()
	url_ := u.String()
	cfg, err := websocket.NewConfig(url_, url_)
	if err != nil {
		return nil, err
	}
	return websocket.DialConfig(cfg)
}
